% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Louvain.R
\name{lclust}
\alias{lclust}
\title{lclust}
\usage{
lclust(A = matrix(), n = 5)
}
\arguments{
\item{A}{symmetric adjacency matrix}

\item{n}{number of steps}
}
\value{
list of groups
}
\description{
This function is an implementation of Louvain method --- a fast clustering algorithm.
It is designed in the way that one can manually define the number of steps and use the output
after any arbitrary number of steps.
}
\details{
The main properties of the algorithm:
\itemize{
\item Initially each node is assigned to a distinct cluster
\item On each pass it tries to move the node from its' own cluster to another one, calculates
change in modularity and choose one for which the gain is the most significant if it's positive
\item If no move of a single node can improve modularity the algorithm aggregates each cluster
and represents it as one node
\item Theese two steps repeats \code{n} times
}
}
\examples{
lclust(A, n = 2)
lclust(A)
}
\references{
Blondel, V. D., Guillaume, J. L., Lambiotte, R., & Lefebvre, E. (2008).
Fast unfolding of communities in large networks. Journal of Statistical Mechanics:
Theory and Experiment, 2008(10), P10008.
}

